<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="StoreUserRequest.php" path="\Http\Requests">
    <totals>
      <lines total="177" comments="83" code="94" executable="37" executed="32" percent="86.49"/>
      <methods count="9" tested="7" percent="77.78"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="App\Http\Requests\StoreUserRequest" start="14" executable="37" executed="32" crap="10.25">
      <namespace name="App\Http\Requests"/>
      <method name="authorize" signature="authorize(): bool" start="40" end="47" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="prepareForValidation" signature="prepareForValidation(): void" start="52" end="81" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="rules" signature="rules(): array" start="86" end="96" crap="1" executable="8" executed="8" coverage="100"/>
      <method name="failedValidation" signature="failedValidation(Illuminate\Contracts\Validation\Validator $validator)" start="101" end="109" crap="2" executable="1" executed="0" coverage="0"/>
      <method name="messages" signature="messages()" start="116" end="126" crap="1" executable="8" executed="8" coverage="100"/>
      <method name="attributes" signature="attributes(): array" start="132" end="137" crap="1" executable="3" executed="3" coverage="100"/>
      <method name="after" signature="after(): array" start="142" end="154" crap="2.35" executable="9" executed="5" coverage="55.555555555556"/>
      <method name="someAdditionalValidationFails" signature="someAdditionalValidationFails(): bool" start="159" end="162" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="passedValidation" signature="passedValidation(): void" start="167" end="176" crap="1" executable="5" executed="5" coverage="100"/>
    </class>
    <coverage>
      <line nr="46">
        <covered by="Tests\Feature\Emails\EmailVerificationTest::test_email_verification_service_sends_verifivcation_email"/>
      </line>
      <line nr="81">
        <covered by="Tests\Feature\Emails\EmailVerificationTest::test_email_verification_service_sends_verifivcation_email"/>
      </line>
      <line nr="89">
        <covered by="Tests\Feature\Emails\EmailVerificationTest::test_email_verification_service_sends_verifivcation_email"/>
      </line>
      <line nr="90">
        <covered by="Tests\Feature\Emails\EmailVerificationTest::test_email_verification_service_sends_verifivcation_email"/>
      </line>
      <line nr="91">
        <covered by="Tests\Feature\Emails\EmailVerificationTest::test_email_verification_service_sends_verifivcation_email"/>
      </line>
      <line nr="119">
        <covered by="Tests\Feature\Emails\EmailVerificationTest::test_email_verification_service_sends_verifivcation_email"/>
      </line>
      <line nr="135">
        <covered by="Tests\Feature\Emails\EmailVerificationTest::test_email_verification_service_sends_verifivcation_email"/>
      </line>
      <line nr="145">
        <covered by="Tests\Feature\Emails\EmailVerificationTest::test_email_verification_service_sends_verifivcation_email"/>
      </line>
      <line nr="146">
        <covered by="Tests\Feature\Emails\EmailVerificationTest::test_email_verification_service_sends_verifivcation_email"/>
      </line>
      <line nr="152">
        <covered by="Tests\Feature\Emails\EmailVerificationTest::test_email_verification_service_sends_verifivcation_email"/>
      </line>
      <line nr="161">
        <covered by="Tests\Feature\Emails\EmailVerificationTest::test_email_verification_service_sends_verifivcation_email"/>
      </line>
      <line nr="171">
        <covered by="Tests\Feature\Emails\EmailVerificationTest::test_email_verification_service_sends_verifivcation_email"/>
      </line>
      <line nr="172">
        <covered by="Tests\Feature\Emails\EmailVerificationTest::test_email_verification_service_sends_verifivcation_email"/>
      </line>
      <line nr="173">
        <covered by="Tests\Feature\Emails\EmailVerificationTest::test_email_verification_service_sends_verifivcation_email"/>
      </line>
      <line nr="174">
        <covered by="Tests\Feature\Emails\EmailVerificationTest::test_email_verification_service_sends_verifivcation_email"/>
      </line>
      <line nr="88">
        <covered by="Tests\Feature\Emails\EmailVerificationTest::test_email_verification_service_sends_verifivcation_email"/>
      </line>
      <line nr="92">
        <covered by="Tests\Feature\Emails\EmailVerificationTest::test_email_verification_service_sends_verifivcation_email"/>
      </line>
      <line nr="93">
        <covered by="Tests\Feature\Emails\EmailVerificationTest::test_email_verification_service_sends_verifivcation_email"/>
      </line>
      <line nr="94">
        <covered by="Tests\Feature\Emails\EmailVerificationTest::test_email_verification_service_sends_verifivcation_email"/>
      </line>
      <line nr="95">
        <covered by="Tests\Feature\Emails\EmailVerificationTest::test_email_verification_service_sends_verifivcation_email"/>
      </line>
      <line nr="118">
        <covered by="Tests\Feature\Emails\EmailVerificationTest::test_email_verification_service_sends_verifivcation_email"/>
      </line>
      <line nr="120">
        <covered by="Tests\Feature\Emails\EmailVerificationTest::test_email_verification_service_sends_verifivcation_email"/>
      </line>
      <line nr="121">
        <covered by="Tests\Feature\Emails\EmailVerificationTest::test_email_verification_service_sends_verifivcation_email"/>
      </line>
      <line nr="122">
        <covered by="Tests\Feature\Emails\EmailVerificationTest::test_email_verification_service_sends_verifivcation_email"/>
      </line>
      <line nr="123">
        <covered by="Tests\Feature\Emails\EmailVerificationTest::test_email_verification_service_sends_verifivcation_email"/>
      </line>
      <line nr="124">
        <covered by="Tests\Feature\Emails\EmailVerificationTest::test_email_verification_service_sends_verifivcation_email"/>
      </line>
      <line nr="125">
        <covered by="Tests\Feature\Emails\EmailVerificationTest::test_email_verification_service_sends_verifivcation_email"/>
      </line>
      <line nr="134">
        <covered by="Tests\Feature\Emails\EmailVerificationTest::test_email_verification_service_sends_verifivcation_email"/>
      </line>
      <line nr="136">
        <covered by="Tests\Feature\Emails\EmailVerificationTest::test_email_verification_service_sends_verifivcation_email"/>
      </line>
      <line nr="144">
        <covered by="Tests\Feature\Emails\EmailVerificationTest::test_email_verification_service_sends_verifivcation_email"/>
      </line>
      <line nr="153">
        <covered by="Tests\Feature\Emails\EmailVerificationTest::test_email_verification_service_sends_verifivcation_email"/>
      </line>
      <line nr="175">
        <covered by="Tests\Feature\Emails\EmailVerificationTest::test_email_verification_service_sends_verifivcation_email"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Http\Requests</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Models\User</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Support\Str</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Rules\StrongPassword</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">App\Http\Responses\ApiResponse</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Validation\Validator</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="10">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Foundation\Http\FormRequest</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Http\Exceptions\HttpResponseException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Contracts\Validation\Validator</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ValidatorContract</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="13"/>
      <line no="14">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">StoreUserRequest</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXTENDS">extends</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">FormRequest</token>
      </line>
      <line no="15">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="16">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="17">
        <token name="T_DOC_COMMENT">     * Indicates if the validator should stop on the first rule failure.</token>
      </line>
      <line no="18">
        <token name="T_DOC_COMMENT">     * @var bool</token>
      </line>
      <line no="19">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">// protected $stopOnFirstFailure = true;</token>
      </line>
      <line no="21"/>
      <line no="22">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="23">
        <token name="T_DOC_COMMENT">     * The URI that users should be redirected to if validation fails.</token>
      </line>
      <line no="24">
        <token name="T_DOC_COMMENT">     * this doesn't work until you comment the failedValidation method</token>
      </line>
      <line no="25">
        <token name="T_DOC_COMMENT">     * @var string</token>
      </line>
      <line no="26">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">// protected $redirect = '/api/users';</token>
      </line>
      <line no="28"/>
      <line no="29">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="30">
        <token name="T_DOC_COMMENT">     * The named route that users should be redirected to if validation fails.</token>
      </line>
      <line no="31">
        <token name="T_DOC_COMMENT">     * @var string</token>
      </line>
      <line no="32">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">// protected $redirectRoute = 'dashboard';</token>
      </line>
      <line no="34"/>
      <line no="35">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="36">
        <token name="T_DOC_COMMENT">     * if you plan to handle authorization logic for the request in another part of your application, </token>
      </line>
      <line no="37">
        <token name="T_DOC_COMMENT">     * you may remove the authorize method completely, or simply return true:</token>
      </line>
      <line no="38">
        <token name="T_DOC_COMMENT">     * @return bool</token>
      </line>
      <line no="39">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">authorize</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// Example: Authorize only if the user has permission to create users</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// return auth()-&gt;user()?-&gt;can('create', User::class) ?? true;</token>
      </line>
      <line no="44"/>
      <line no="45">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// Allow all users</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="48"/>
      <line no="49">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="50">
        <token name="T_DOC_COMMENT">     * Prepare the data for validation.</token>
      </line>
      <line no="51">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">prepareForValidation</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="54"/>
      <line no="55"/>
      <line no="56"/>
      <line no="57"/>
      <line no="58">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">## for admin onlyyyyyyyyyyyyyyyyy</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// if (!$this-&gt;has('role_id')) {</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     $this-&gt;merge([</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//         'role_id' =&gt; 2,    // 2 = normal user</token>
      </line>
      <line no="62">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     ]);</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// } else {</token>
      </line>
      <line no="64">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     if (in_array($this-&gt;input('role_id'), [null])) {</token>
      </line>
      <line no="65">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//         $this-&gt;merge([</token>
      </line>
      <line no="66">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//             'role_id' =&gt; 2,    // 2 = normal user</token>
      </line>
      <line no="67">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//         ]);</token>
      </line>
      <line no="68">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     }</token>
      </line>
      <line no="69">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// }</token>
      </line>
      <line no="70">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// if (!$this-&gt;has('status_id')) {</token>
      </line>
      <line no="71">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     $this-&gt;merge([</token>
      </line>
      <line no="72">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//         'status_id' =&gt; 1,  // 1 = active</token>
      </line>
      <line no="73">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     ]);</token>
      </line>
      <line no="74">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// } else {</token>
      </line>
      <line no="75">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     if ($this-&gt;input('status_id') == null) {</token>
      </line>
      <line no="76">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//         $this-&gt;merge([</token>
      </line>
      <line no="77">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//             'status_id' =&gt; 1,  // 1 = active</token>
      </line>
      <line no="78">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//         ]);</token>
      </line>
      <line no="79">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     }</token>
      </line>
      <line no="80">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// }</token>
      </line>
      <line no="81">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="82"/>
      <line no="83">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="84">
        <token name="T_DOC_COMMENT">     * Get the validation rules that apply to the request.</token>
      </line>
      <line no="85">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="86">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">rules</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="88">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="89">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'username'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'required|string|unique:users,username|max:255'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="90">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'email'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'required|email|unique:users,email'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="91">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'password'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'required'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'confirmed'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'min:5'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">StrongPassword</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="92">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// for admin onlyyyyyyyyyyyy</token>
      </line>
      <line no="93">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// 'role_id' =&gt; 'required|integer|exists:roles,id',</token>
      </line>
      <line no="94">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// 'status_id' =&gt; 'required|integer|exists:statuses,id',</token>
      </line>
      <line no="95">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="96">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="97"/>
      <line no="98">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="99">
        <token name="T_DOC_COMMENT">     * Handle failed validation for API response.</token>
      </line>
      <line no="100">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="101">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">failedValidation</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">ValidatorContract</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$validator</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="102">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
        <token name="T_WHITESPACE"> </token>
      </line>
      <line no="103">
        <token name="T_WHITESPACE">        </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">HttpResponseException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">ApiResponse</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">error</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Validation errors'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">422</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$validator</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">errors</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="104">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// throw new HttpResponseException(response()-&gt;json([</token>
      </line>
      <line no="105">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     'success' =&gt; false,</token>
      </line>
      <line no="106">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     'message' =&gt; 'Validation errors',</token>
      </line>
      <line no="107">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     'errors' =&gt; $validator-&gt;errors()</token>
      </line>
      <line no="108">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// ], 422));</token>
      </line>
      <line no="109">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="110"/>
      <line no="111">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="112">
        <token name="T_DOC_COMMENT">     * Get the error messages for the defined validation rules.</token>
      </line>
      <line no="113">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="114">
        <token name="T_DOC_COMMENT">     * @return array&lt;string, string&gt;</token>
      </line>
      <line no="115">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="116">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">messages</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="117">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="118">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="119">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'email.unique'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'This email is already registered.'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="120">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'password.confirmed'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Passwords do not match.'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="121">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// 'role_id.required' =&gt; 'role id is required|integer|exists:roles,id',</token>
      </line>
      <line no="122">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// 'role_id.integer' =&gt; 'role id must be integer|exists:roles,id',</token>
      </line>
      <line no="123">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// 'status_id.required' =&gt; 'status id is required|integer|exists:roles,id',</token>
      </line>
      <line no="124">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// 'status_id.integer' =&gt; 'status id must be integer|exists:roles,id',</token>
      </line>
      <line no="125">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="126">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="127">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="128">
        <token name="T_DOC_COMMENT">     * Get custom attributes for validator errors.</token>
      </line>
      <line no="129">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="130">
        <token name="T_DOC_COMMENT">     * @return array&lt;string, string&gt;</token>
      </line>
      <line no="131">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="132">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">attributes</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="133">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="134">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="135">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'email'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'email address'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="136">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="137">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="138"/>
      <line no="139">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="140">
        <token name="T_DOC_COMMENT">     * Additional validation logic after standard validation.</token>
      </line>
      <line no="141">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="142">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">after</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="143">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="144">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="145">
        <token name="T_WHITESPACE">            </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Validator</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$validator</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="146">
        <token name="T_WHITESPACE">                </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">someAdditionalValidationFails</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="147">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$validator</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">errors</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">add</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="148">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'extra_field'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="149">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Custom validation condition failed.'</token>
      </line>
      <line no="150">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="151">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="152">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="153">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="154">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="155"/>
      <line no="156">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="157">
        <token name="T_DOC_COMMENT">     * Custom additional validation logic.</token>
      </line>
      <line no="158">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="159">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">someAdditionalValidationFails</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="160">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="161">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COMMENT">// Modify as needed</token>
      </line>
      <line no="162">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="163"/>
      <line no="164">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="165">
        <token name="T_DOC_COMMENT">     * Handle a passed validation attempt.</token>
      </line>
      <line no="166">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="167">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">passedValidation</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="168">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="169">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// Example: Normalize name before processing</token>
      </line>
      <line no="170">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// $this-&gt;replace(['username' =&gt; 'Taylor']);</token>
      </line>
      <line no="171">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">merge</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="172">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'username'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">trim</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">input</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'username'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="173">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'email'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">trim</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">input</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'email'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="174">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'password'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">trim</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">input</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'password'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="175">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="176">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="177">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
    </source>
  </file>
</phpunit>
